;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(helm-M-x-input-history minibuffer-history evil-ex-search-history counsel-M-x-history evil-ex-history file-name-history ivy-history extended-command-history))
(setq helm-M-x-input-history '("theme" "tide" "restart"))
(setq minibuffer-history '("" "y" "restart" "y"))
(setq evil-ex-search-history '("completion" "magit"))
(setq counsel-M-x-history '(#("restart" 0 7 (ivy-index 0)) #("reloa" 0 5 (ivy-index 1)) #("relo" 0 4 (ivy-index 0)) #("re" 0 2 (ivy-index 0)) #("rjs" 0 3 (ivy-index 0)) #("doom refr" 0 9 (ivy-index 0))))
(setq evil-ex-history '(#("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '(#("/home/maruku/.doom.d/init.el" 0 28 (ivy-index 3)) #("/home/maruku/.emacs.d/" 0 22 (ivy-index 0)) #("/home/maruku/dev/werlabs/e.jenner/" 0 34 (ivy-index 0))))
(setq ivy-history '(#("html" 0 4 (ivy-index 0)) "src/components/viewAs/ViewAs.jsx" "~/dev/werlabs/e.jenner/" "ViewAs.jsx" #(" ." 0 2 (ivy-index 0)) #("w" 0 1 (ivy-index 0))))
(setq extended-command-history '("load-theme" "tide-setup" "tide-mode" "all-the-icons-install-fonts"))
(setq evil-jumps-history '((2221 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (2265 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (1977 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (2225 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (2225 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (1 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (734 "/home/maruku/.doom.d/init.el") (670 "/home/maruku/.doom.d/init.el") (8290 "/home/maruku/.doom.d/init.el") (1998 "/home/maruku/.doom.d/init.el") (1 "/home/maruku/.doom.d/init.el") (1 "/home/maruku/dev/werlabs/e.jenner/public/index.html") (2189 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (1 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (2188 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (3754 "/home/maruku/.doom.d/init.el") (7003 "/home/maruku/.doom.d/init.el") (1 "/home/maruku/.doom.d/init.el") (2212 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx") (1 "/home/maruku/dev/werlabs/e.jenner/src/components/viewAs/ViewAs.jsx")))
(setq kill-ring '("s" "          suggestions={suggestions}
" "        <Autosuggest suggestions={suggestions}>
" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist (cons \"\\\\.go\\\\'\" 'go-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.editorconfig\\\\'\" . editorconfig-conf-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.styl\\\\'\" . stylus-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.sass\\\\'\" . sass-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.slim\\\\'\" . slim-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.\\\\(?:jade\\\\|pug\\\\)\\\\'\" . pug-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"\\\\.haml\\\\'\" . haml-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist '(\"/fish_funced\\\\..*\\\\'\" . fish-mode))" "(add-to-list 'auto-mode-alist '(\"\\\\.fish\\\\'\" . fish-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'auto-mode-alist `(,(rx \"requirements.in\") . pip-requirements-mode))" "(add-to-list 'auto-mode-alist `(,(rx \"requirements\" (zero-or-more anything) \".txt\" string-end) . pip-requirements-mode))" "(add-to-list 'auto-mode-alist `(,(rx \".pip\" string-end) . pip-requirements-mode))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))" "(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))"))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
